{"ast":null,"code":"import React from 'react';\nimport { connectPagination } from 'react-instantsearch-core';\nimport Pagination from \"../components/Pagination.js\";\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\n\n/**\r\n * The Pagination widget displays a simple pagination system allowing the user to\r\n * change the current page.\r\n * @name Pagination\r\n * @kind widget\r\n * @propType {boolean} [showFirst=true] - Display the first page link.\r\n * @propType {boolean} [showLast=false] - Display the last page link.\r\n * @propType {boolean} [showPrevious=true] - Display the previous page link.\r\n * @propType {boolean} [showNext=true] - Display the next page link.\r\n * @propType {number} [padding=3] - How many page links to display around the current page.\r\n * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.\r\n * @themeKey ais-Pagination - the root div of the widget\r\n * @themeKey ais-Pagination--noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-Pagination-list - the list of all pagination items\r\n * @themeKey ais-Pagination-list--noRefinement - the list of all pagination items when there is no refinement\r\n * @themeKey ais-Pagination-item - the pagination list item\r\n * @themeKey ais-Pagination-item--firstPage - the \"first\" pagination list item\r\n * @themeKey ais-Pagination-item--lastPage - the \"last\" pagination list item\r\n * @themeKey ais-Pagination-item--previousPage - the \"previous\" pagination list item\r\n * @themeKey ais-Pagination-item--nextPage - the \"next\" pagination list item\r\n * @themeKey ais-Pagination-item--page - the \"page\" pagination list item\r\n * @themeKey ais-Pagination-item--selected - the selected pagination list item\r\n * @themeKey ais-Pagination-item--disabled - the disabled pagination list item\r\n * @themeKey ais-Pagination-link - the pagination clickable element\r\n * @translationKey previous - Label value for the previous page link\r\n * @translationKey next - Label value for the next page link\r\n * @translationKey first - Label value for the first page link\r\n * @translationKey last - Label value for the last page link\r\n * @translationkey page - Label value for a page item. You get function(currentRefinement) and you need to return a string\r\n * @translationKey ariaPrevious - Accessibility label value for the previous page link\r\n * @translationKey ariaNext - Accessibility label value for the next page link\r\n * @translationKey ariaFirst - Accessibility label value for the first page link\r\n * @translationKey ariaLast - Accessibility label value for the last page link\r\n * @translationkey ariaPage - Accessibility label value for a page item. You get function(currentRefinement) and you need to return a string\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, Pagination } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <Pagination />\r\n *   </InstantSearch>\r\n * );\r\n */\n\nvar PaginationWidget = function PaginationWidget(props) {\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(Pagination, props));\n};\nexport default connectPagination(PaginationWidget, {\n  $$widgetType: 'ais.pagination'\n});","map":{"version":3,"names":["React","connectPagination","Pagination","PanelCallbackHandler","PaginationWidget","props","createElement","$$widgetType"],"sources":["C:/Users/tudor/propr/RepositoryNetlify/node_modules/react-instantsearch-dom/dist/es/widgets/Pagination.js"],"sourcesContent":["import React from 'react';\r\nimport { connectPagination } from 'react-instantsearch-core';\r\nimport Pagination from \"../components/Pagination.js\";\r\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\r\n\r\n/**\r\n * The Pagination widget displays a simple pagination system allowing the user to\r\n * change the current page.\r\n * @name Pagination\r\n * @kind widget\r\n * @propType {boolean} [showFirst=true] - Display the first page link.\r\n * @propType {boolean} [showLast=false] - Display the last page link.\r\n * @propType {boolean} [showPrevious=true] - Display the previous page link.\r\n * @propType {boolean} [showNext=true] - Display the next page link.\r\n * @propType {number} [padding=3] - How many page links to display around the current page.\r\n * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.\r\n * @themeKey ais-Pagination - the root div of the widget\r\n * @themeKey ais-Pagination--noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-Pagination-list - the list of all pagination items\r\n * @themeKey ais-Pagination-list--noRefinement - the list of all pagination items when there is no refinement\r\n * @themeKey ais-Pagination-item - the pagination list item\r\n * @themeKey ais-Pagination-item--firstPage - the \"first\" pagination list item\r\n * @themeKey ais-Pagination-item--lastPage - the \"last\" pagination list item\r\n * @themeKey ais-Pagination-item--previousPage - the \"previous\" pagination list item\r\n * @themeKey ais-Pagination-item--nextPage - the \"next\" pagination list item\r\n * @themeKey ais-Pagination-item--page - the \"page\" pagination list item\r\n * @themeKey ais-Pagination-item--selected - the selected pagination list item\r\n * @themeKey ais-Pagination-item--disabled - the disabled pagination list item\r\n * @themeKey ais-Pagination-link - the pagination clickable element\r\n * @translationKey previous - Label value for the previous page link\r\n * @translationKey next - Label value for the next page link\r\n * @translationKey first - Label value for the first page link\r\n * @translationKey last - Label value for the last page link\r\n * @translationkey page - Label value for a page item. You get function(currentRefinement) and you need to return a string\r\n * @translationKey ariaPrevious - Accessibility label value for the previous page link\r\n * @translationKey ariaNext - Accessibility label value for the next page link\r\n * @translationKey ariaFirst - Accessibility label value for the first page link\r\n * @translationKey ariaLast - Accessibility label value for the last page link\r\n * @translationkey ariaPage - Accessibility label value for a page item. You get function(currentRefinement) and you need to return a string\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, Pagination } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <Pagination />\r\n *   </InstantSearch>\r\n * );\r\n */\r\n\r\nvar PaginationWidget = function PaginationWidget(props) {\r\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(Pagination, props));\r\n};\r\nexport default connectPagination(PaginationWidget, {\r\n  $$widgetType: 'ais.pagination'\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,oBAAoB,MAAM,uCAAuC;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,KAAK,EAAE;EACtD,OAAO,aAAaL,KAAK,CAACM,aAAa,CAACH,oBAAoB,EAAEE,KAAK,EAAE,aAAaL,KAAK,CAACM,aAAa,CAACJ,UAAU,EAAEG,KAAK,CAAC,CAAC;AAC3H,CAAC;AACD,eAAeJ,iBAAiB,CAACG,gBAAgB,EAAE;EACjDG,YAAY,EAAE;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}