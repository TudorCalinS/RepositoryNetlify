{"ast":null,"code":"import { connectHighlight } from 'react-instantsearch-core';\nimport Highlight from \"../components/Highlight.js\";\n\n/**\r\n * Renders any attribute from a hit into its highlighted form when relevant.\r\n *\r\n * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.\r\n * @name Highlight\r\n * @kind widget\r\n * @propType {string} attribute - location of the highlighted attribute in the hit (the corresponding element can be either a string or an array of strings)\r\n * @propType {object} hit - hit object containing the highlighted attribute\r\n * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the hit\r\n * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted\r\n * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.\r\n * @themeKey ais-Highlight - root of the component\r\n * @themeKey ais-Highlight-highlighted - part of the text which is highlighted\r\n * @themeKey ais-Highlight-nonHighlighted - part of the text that is not highlighted\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, SearchBox, Hits, Highlight } from 'react-instantsearch-dom';\r\n *\r\n * const Hit = ({ hit }) => (\r\n *   <div>\r\n *     <Highlight attribute=\"name\" hit={hit} />\r\n *   </div>\r\n * );\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <SearchBox defaultRefinement=\"Pho\" />\r\n *     <Hits hitComponent={Hit} />\r\n *   </InstantSearch>\r\n * );\r\n */\n\nexport default connectHighlight(Highlight, {\n  $$widgetType: 'ais.highlight'\n});","map":{"version":3,"names":["connectHighlight","Highlight","$$widgetType"],"sources":["C:/Users/tudor/propr/RepositoryNetlify/node_modules/react-instantsearch-dom/dist/es/widgets/Highlight.js"],"sourcesContent":["import { connectHighlight } from 'react-instantsearch-core';\r\nimport Highlight from \"../components/Highlight.js\";\r\n\r\n/**\r\n * Renders any attribute from a hit into its highlighted form when relevant.\r\n *\r\n * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.\r\n * @name Highlight\r\n * @kind widget\r\n * @propType {string} attribute - location of the highlighted attribute in the hit (the corresponding element can be either a string or an array of strings)\r\n * @propType {object} hit - hit object containing the highlighted attribute\r\n * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the hit\r\n * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted\r\n * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.\r\n * @themeKey ais-Highlight - root of the component\r\n * @themeKey ais-Highlight-highlighted - part of the text which is highlighted\r\n * @themeKey ais-Highlight-nonHighlighted - part of the text that is not highlighted\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, SearchBox, Hits, Highlight } from 'react-instantsearch-dom';\r\n *\r\n * const Hit = ({ hit }) => (\r\n *   <div>\r\n *     <Highlight attribute=\"name\" hit={hit} />\r\n *   </div>\r\n * );\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <SearchBox defaultRefinement=\"Pho\" />\r\n *     <Hits hitComponent={Hit} />\r\n *   </InstantSearch>\r\n * );\r\n */\r\n\r\nexport default connectHighlight(Highlight, {\r\n  $$widgetType: 'ais.highlight'\r\n});"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,0BAA0B;AAC3D,OAAOC,SAAS,MAAM,4BAA4B;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeD,gBAAgB,CAACC,SAAS,EAAE;EACzCC,YAAY,EAAE;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}