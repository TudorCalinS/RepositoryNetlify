{"ast":null,"code":"'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n  return value;\n}\nfunction isObjectOrArrayOrFunction(value) {\n  return typeof value === 'function' || Array.isArray(value) || Object.prototype.toString.call(value) === '[object Object]';\n}\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (var key in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, key) || key === '__proto__' || key === 'constructor') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    var sourceVal = source[key];\n    var targetVal = target[key];\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (isObjectOrArrayOrFunction(targetVal) && isObjectOrArrayOrFunction(sourceVal)) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n  return target;\n}\n\n/**\r\n * This method is like Object.assign, but recursively merges own and inherited\r\n * enumerable keyed properties of source objects into the destination object.\r\n *\r\n * NOTE: this behaves like lodash/merge, but:\r\n * - does mutate functions if they are a source\r\n * - treats non-plain objects as plain\r\n * - does not work for circular objects\r\n * - treats sparse arrays as sparse\r\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\r\n *\r\n * @param {Object} target The destination object.\r\n * @param {...Object} [sources] The source objects.\r\n * @returns {Object} Returns `object`.\r\n */\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n  return target;\n}\nmodule.exports = merge;","map":{"version":3,"names":["clone","value","_merge","Array","isArray","isObjectOrArrayOrFunction","Object","prototype","toString","call","target","source","key","hasOwnProperty","sourceVal","targetVal","merge","i","l","arguments","length","module","exports"],"sources":["C:/Users/tudor/propr/RepositoryNetlify/node_modules/react-instantsearch-core/node_modules/algoliasearch-helper/src/functions/merge.js"],"sourcesContent":["'use strict';\r\n\r\nfunction clone(value) {\r\n  if (typeof value === 'object' && value !== null) {\r\n    return _merge(Array.isArray(value) ? [] : {}, value);\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction isObjectOrArrayOrFunction(value) {\r\n  return (\r\n    typeof value === 'function' ||\r\n    Array.isArray(value) ||\r\n    Object.prototype.toString.call(value) === '[object Object]'\r\n  );\r\n}\r\n\r\nfunction _merge(target, source) {\r\n  if (target === source) {\r\n    return target;\r\n  }\r\n\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (var key in source) {\r\n    if (\r\n      !Object.prototype.hasOwnProperty.call(source, key) ||\r\n      key === '__proto__' ||\r\n      key === 'constructor'\r\n    ) {\r\n      // eslint-disable-next-line no-continue\r\n      continue;\r\n    }\r\n\r\n    var sourceVal = source[key];\r\n    var targetVal = target[key];\r\n\r\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\r\n      // eslint-disable-next-line no-continue\r\n      continue;\r\n    }\r\n\r\n    if (\r\n      isObjectOrArrayOrFunction(targetVal) &&\r\n      isObjectOrArrayOrFunction(sourceVal)\r\n    ) {\r\n      target[key] = _merge(targetVal, sourceVal);\r\n    } else {\r\n      target[key] = clone(sourceVal);\r\n    }\r\n  }\r\n  return target;\r\n}\r\n\r\n/**\r\n * This method is like Object.assign, but recursively merges own and inherited\r\n * enumerable keyed properties of source objects into the destination object.\r\n *\r\n * NOTE: this behaves like lodash/merge, but:\r\n * - does mutate functions if they are a source\r\n * - treats non-plain objects as plain\r\n * - does not work for circular objects\r\n * - treats sparse arrays as sparse\r\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\r\n *\r\n * @param {Object} target The destination object.\r\n * @param {...Object} [sources] The source objects.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction merge(target) {\r\n  if (!isObjectOrArrayOrFunction(target)) {\r\n    target = {};\r\n  }\r\n\r\n  for (var i = 1, l = arguments.length; i < l; i++) {\r\n    var source = arguments[i];\r\n\r\n    if (isObjectOrArrayOrFunction(source)) {\r\n      _merge(target, source);\r\n    }\r\n  }\r\n  return target;\r\n}\r\n\r\nmodule.exports = merge;\r\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,KAAKA,CAACC,KAAK,EAAE;EACpB,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;IAC/C,OAAOC,MAAM,CAACC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAEA,KAAK,CAAC;EACtD;EACA,OAAOA,KAAK;AACd;AAEA,SAASI,yBAAyBA,CAACJ,KAAK,EAAE;EACxC,OACE,OAAOA,KAAK,KAAK,UAAU,IAC3BE,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,IACpBK,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACR,KAAK,CAAC,KAAK,iBAAiB;AAE/D;AAEA,SAASC,MAAMA,CAACQ,MAAM,EAAEC,MAAM,EAAE;EAC9B,IAAID,MAAM,KAAKC,MAAM,EAAE;IACrB,OAAOD,MAAM;EACf;;EAEA;EACA,KAAK,IAAIE,GAAG,IAAID,MAAM,EAAE;IACtB,IACE,CAACL,MAAM,CAACC,SAAS,CAACM,cAAc,CAACJ,IAAI,CAACE,MAAM,EAAEC,GAAG,CAAC,IAClDA,GAAG,KAAK,WAAW,IACnBA,GAAG,KAAK,aAAa,EACrB;MACA;MACA;IACF;IAEA,IAAIE,SAAS,GAAGH,MAAM,CAACC,GAAG,CAAC;IAC3B,IAAIG,SAAS,GAAGL,MAAM,CAACE,GAAG,CAAC;IAE3B,IAAI,OAAOG,SAAS,KAAK,WAAW,IAAI,OAAOD,SAAS,KAAK,WAAW,EAAE;MACxE;MACA;IACF;IAEA,IACET,yBAAyB,CAACU,SAAS,CAAC,IACpCV,yBAAyB,CAACS,SAAS,CAAC,EACpC;MACAJ,MAAM,CAACE,GAAG,CAAC,GAAGV,MAAM,CAACa,SAAS,EAAED,SAAS,CAAC;IAC5C,CAAC,MAAM;MACLJ,MAAM,CAACE,GAAG,CAAC,GAAGZ,KAAK,CAACc,SAAS,CAAC;IAChC;EACF;EACA,OAAOJ,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,KAAKA,CAACN,MAAM,EAAE;EACrB,IAAI,CAACL,yBAAyB,CAACK,MAAM,CAAC,EAAE;IACtCA,MAAM,GAAG,CAAC,CAAC;EACb;EAEA,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;IAChD,IAAIN,MAAM,GAAGQ,SAAS,CAACF,CAAC,CAAC;IAEzB,IAAIZ,yBAAyB,CAACM,MAAM,CAAC,EAAE;MACrCT,MAAM,CAACQ,MAAM,EAAEC,MAAM,CAAC;IACxB;EACF;EACA,OAAOD,MAAM;AACf;AAEAW,MAAM,CAACC,OAAO,GAAGN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}