{"ast":null,"code":"import { connectSortBy } from 'react-instantsearch-core';\nimport SortBy from \"../components/SortBy.js\";\n\n/**\r\n * The SortBy component displays a list of indexes allowing a user to change the hits are sorting.\r\n * @name SortBy\r\n * @requirements Algolia handles sorting by creating replica indices. [Read more about sorting](https://www.algolia.com/doc/guides/relevance/sorting/) on\r\n * the Algolia website.\r\n * @kind widget\r\n * @propType {string} id - The id of the select input\r\n * @propType {{value: string, label: string}[]} items - The list of indexes to search in.\r\n * @propType {string} defaultRefinement - The default selected index.\r\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\r\n * @themeKey ais-SortBy - the root div of the widget\r\n * @themeKey ais-SortBy-select - the select\r\n * @themeKey ais-SortBy-option - the select option\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, SortBy } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <SortBy\r\n *       defaultRefinement=\"instant_search\"\r\n *       items={[\r\n *         { value: 'instant_search', label: 'Featured' },\r\n *         { value: 'instant_search_price_asc', label: 'Price asc.' },\r\n *         { value: 'instant_search_price_desc', label: 'Price desc.' },\r\n *       ]}\r\n *     />\r\n *   </InstantSearch>\r\n * );\r\n */\n\nexport default connectSortBy(SortBy, {\n  $$widgetType: 'ais.sortBy'\n});","map":{"version":3,"names":["connectSortBy","SortBy","$$widgetType"],"sources":["C:/Users/tudor/propr/RepositoryNetlify/node_modules/react-instantsearch-dom/dist/es/widgets/SortBy.js"],"sourcesContent":["import { connectSortBy } from 'react-instantsearch-core';\r\nimport SortBy from \"../components/SortBy.js\";\r\n\r\n/**\r\n * The SortBy component displays a list of indexes allowing a user to change the hits are sorting.\r\n * @name SortBy\r\n * @requirements Algolia handles sorting by creating replica indices. [Read more about sorting](https://www.algolia.com/doc/guides/relevance/sorting/) on\r\n * the Algolia website.\r\n * @kind widget\r\n * @propType {string} id - The id of the select input\r\n * @propType {{value: string, label: string}[]} items - The list of indexes to search in.\r\n * @propType {string} defaultRefinement - The default selected index.\r\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\r\n * @themeKey ais-SortBy - the root div of the widget\r\n * @themeKey ais-SortBy-select - the select\r\n * @themeKey ais-SortBy-option - the select option\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, SortBy } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <SortBy\r\n *       defaultRefinement=\"instant_search\"\r\n *       items={[\r\n *         { value: 'instant_search', label: 'Featured' },\r\n *         { value: 'instant_search_price_asc', label: 'Price asc.' },\r\n *         { value: 'instant_search_price_desc', label: 'Price desc.' },\r\n *       ]}\r\n *     />\r\n *   </InstantSearch>\r\n * );\r\n */\r\n\r\nexport default connectSortBy(SortBy, {\r\n  $$widgetType: 'ais.sortBy'\r\n});"],"mappings":"AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,MAAM,MAAM,yBAAyB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeD,aAAa,CAACC,MAAM,EAAE;EACnCC,YAAY,EAAE;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}