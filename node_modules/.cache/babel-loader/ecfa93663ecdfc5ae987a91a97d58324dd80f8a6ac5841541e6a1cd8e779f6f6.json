{"ast":null,"code":"import React from 'react';\nimport { connectBreadcrumb } from 'react-instantsearch-core';\nimport Breadcrumb from \"../components/Breadcrumb.js\";\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\n\n/**\r\n * A breadcrumb is a secondary navigation scheme that allows the user to see where the current page\r\n * is in relation to the website or web application’s hierarchy.\r\n * In terms of usability, using a breadcrumb reduces the number of actions a visitor needs to take in\r\n * order to get to a higher-level page.\r\n *\r\n * If you want to select a specific refinement for your Breadcrumb component, you will need to\r\n * use a [Virtual Hierarchical Menu](https://community.algolia.com/react-instantsearch/guide/Virtual_widgets.html)\r\n * and set its defaultRefinement that will be then used by the Breadcrumb.\r\n *\r\n * @name Breadcrumb\r\n * @kind widget\r\n * @requirements Breadcrumbs are used for websites with a large amount of content organised in a hierarchical manner.\r\n * The typical example is an e-commerce website which has a large variety of products grouped into logical categories\r\n * (with categories, subcategories which also have subcategories).To use this widget, your attributes must be formatted in a specific way.\r\n *\r\n * Keep in mind that breadcrumbs shouldn’t replace effective primary navigation menus:\r\n * it is only an alternative way to navigate around the website.\r\n *\r\n * If, for instance, you would like to have a breadcrumb of categories, objects in your index\r\n * should be formatted this way:\r\n *\r\n * ```json\r\n * {\r\n *   \"categories.lvl0\": \"products\",\r\n *   \"categories.lvl1\": \"products > fruits\",\r\n *   \"categories.lvl2\": \"products > fruits > citrus\"\r\n * }\r\n * ```\r\n *\r\n * It's also possible to provide more than one path for each level:\r\n *\r\n * ```json\r\n * {\r\n *   \"categories.lvl0\": [\"products\", \"goods\"],\r\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\r\n * }\r\n * ```\r\n *\r\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\r\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\r\n *\r\n * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow\r\n * @propType {node} [separator='>'] -  Symbol used for separating hyperlinks\r\n * @propType {string} [rootURL=null] - The originating page (homepage)\r\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return\r\n * @themeKey ais-Breadcrumb - the root div of the widget\r\n * @themeKey ais-Breadcrumb--noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-Breadcrumb-list - the list of all breadcrumb items\r\n * @themeKey ais-Breadcrumb-item - the breadcrumb navigation item\r\n * @themeKey ais-Breadcrumb-item--selected - the selected breadcrumb item\r\n * @themeKey ais-Breadcrumb-separator - the separator of each breadcrumb item\r\n * @themeKey ais-Breadcrumb-link - the clickable breadcrumb element\r\n * @translationKey rootLabel - The root's label. Accepts a string\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { Breadcrumb, InstantSearch, HierarchicalMenu } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <Breadcrumb\r\n *       attributes={[\r\n *         'hierarchicalCategories.lvl0',\r\n *         'hierarchicalCategories.lvl1',\r\n *         'hierarchicalCategories.lvl2',\r\n *       ]}\r\n *     />\r\n *     <HierarchicalMenu\r\n *       defaultRefinement=\"Cameras & Camcorders\"\r\n *       attributes={[\r\n *         'hierarchicalCategories.lvl0',\r\n *         'hierarchicalCategories.lvl1',\r\n *         'hierarchicalCategories.lvl2',\r\n *       ]}\r\n *     />\r\n *   </InstantSearch>\r\n * );\r\n */\n\nvar BreadcrumbWidget = function BreadcrumbWidget(props) {\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(Breadcrumb, props));\n};\nexport default connectBreadcrumb(BreadcrumbWidget, {\n  $$widgetType: 'ais.breadcrumb'\n});","map":{"version":3,"names":["React","connectBreadcrumb","Breadcrumb","PanelCallbackHandler","BreadcrumbWidget","props","createElement","$$widgetType"],"sources":["C:/Users/tudor/propr/RepositoryNetlify/node_modules/react-instantsearch-dom/dist/es/widgets/Breadcrumb.js"],"sourcesContent":["import React from 'react';\r\nimport { connectBreadcrumb } from 'react-instantsearch-core';\r\nimport Breadcrumb from \"../components/Breadcrumb.js\";\r\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\r\n\r\n/**\r\n * A breadcrumb is a secondary navigation scheme that allows the user to see where the current page\r\n * is in relation to the website or web application’s hierarchy.\r\n * In terms of usability, using a breadcrumb reduces the number of actions a visitor needs to take in\r\n * order to get to a higher-level page.\r\n *\r\n * If you want to select a specific refinement for your Breadcrumb component, you will need to\r\n * use a [Virtual Hierarchical Menu](https://community.algolia.com/react-instantsearch/guide/Virtual_widgets.html)\r\n * and set its defaultRefinement that will be then used by the Breadcrumb.\r\n *\r\n * @name Breadcrumb\r\n * @kind widget\r\n * @requirements Breadcrumbs are used for websites with a large amount of content organised in a hierarchical manner.\r\n * The typical example is an e-commerce website which has a large variety of products grouped into logical categories\r\n * (with categories, subcategories which also have subcategories).To use this widget, your attributes must be formatted in a specific way.\r\n *\r\n * Keep in mind that breadcrumbs shouldn’t replace effective primary navigation menus:\r\n * it is only an alternative way to navigate around the website.\r\n *\r\n * If, for instance, you would like to have a breadcrumb of categories, objects in your index\r\n * should be formatted this way:\r\n *\r\n * ```json\r\n * {\r\n *   \"categories.lvl0\": \"products\",\r\n *   \"categories.lvl1\": \"products > fruits\",\r\n *   \"categories.lvl2\": \"products > fruits > citrus\"\r\n * }\r\n * ```\r\n *\r\n * It's also possible to provide more than one path for each level:\r\n *\r\n * ```json\r\n * {\r\n *   \"categories.lvl0\": [\"products\", \"goods\"],\r\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\r\n * }\r\n * ```\r\n *\r\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\r\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\r\n *\r\n * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow\r\n * @propType {node} [separator='>'] -  Symbol used for separating hyperlinks\r\n * @propType {string} [rootURL=null] - The originating page (homepage)\r\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return\r\n * @themeKey ais-Breadcrumb - the root div of the widget\r\n * @themeKey ais-Breadcrumb--noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-Breadcrumb-list - the list of all breadcrumb items\r\n * @themeKey ais-Breadcrumb-item - the breadcrumb navigation item\r\n * @themeKey ais-Breadcrumb-item--selected - the selected breadcrumb item\r\n * @themeKey ais-Breadcrumb-separator - the separator of each breadcrumb item\r\n * @themeKey ais-Breadcrumb-link - the clickable breadcrumb element\r\n * @translationKey rootLabel - The root's label. Accepts a string\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { Breadcrumb, InstantSearch, HierarchicalMenu } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <Breadcrumb\r\n *       attributes={[\r\n *         'hierarchicalCategories.lvl0',\r\n *         'hierarchicalCategories.lvl1',\r\n *         'hierarchicalCategories.lvl2',\r\n *       ]}\r\n *     />\r\n *     <HierarchicalMenu\r\n *       defaultRefinement=\"Cameras & Camcorders\"\r\n *       attributes={[\r\n *         'hierarchicalCategories.lvl0',\r\n *         'hierarchicalCategories.lvl1',\r\n *         'hierarchicalCategories.lvl2',\r\n *       ]}\r\n *     />\r\n *   </InstantSearch>\r\n * );\r\n */\r\n\r\nvar BreadcrumbWidget = function BreadcrumbWidget(props) {\r\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(Breadcrumb, props));\r\n};\r\nexport default connectBreadcrumb(BreadcrumbWidget, {\r\n  $$widgetType: 'ais.breadcrumb'\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,oBAAoB,MAAM,uCAAuC;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,KAAK,EAAE;EACtD,OAAO,aAAaL,KAAK,CAACM,aAAa,CAACH,oBAAoB,EAAEE,KAAK,EAAE,aAAaL,KAAK,CAACM,aAAa,CAACJ,UAAU,EAAEG,KAAK,CAAC,CAAC;AAC3H,CAAC;AACD,eAAeJ,iBAAiB,CAACG,gBAAgB,EAAE;EACjDG,YAAY,EAAE;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}