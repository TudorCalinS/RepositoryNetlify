{"ast":null,"code":"import React from 'react';\nimport { connectNumericMenu } from 'react-instantsearch-core';\nimport NumericMenu from \"../components/NumericMenu.js\";\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\n\n/**\r\n * NumericMenu is a widget used for selecting the range value of a numeric attribute.\r\n * @name NumericMenu\r\n * @kind widget\r\n * @requirements The attribute passed to the `attribute` prop must be holding numerical values.\r\n * @propType {string} attribute - the name of the attribute in the records\r\n * @propType {{label: string, start: number, end: number}[]} items - List of options. With a text label, and upper and lower bounds.\r\n * @propType {string} [defaultRefinement] - the value of the item selected by default, follow the format \"min:max\".\r\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\r\n * @themeKey ais-NumericMenu - the root div of the widget\r\n * @themeKey ais-NumericMenu--noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-NumericMenu-list - the list of all refinement items\r\n * @themeKey ais-NumericMenu-item - the refinement list item\r\n * @themeKey ais-NumericMenu-item--selected - the selected refinement list item\r\n * @themeKey ais-NumericMenu-label - the label of each refinement item\r\n * @themeKey ais-NumericMenu-radio - the radio input of each refinement item\r\n * @themeKey ais-NumericMenu-labelText - the label text of each refinement item\r\n * @translationkey all - The label of the largest range added automatically by react instantsearch\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, NumericMenu } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <NumericMenu\r\n *       attribute=\"price\"\r\n *       items={[\r\n *         { end: 10, label: '< $10' },\r\n *         { start: 10, end: 100, label: '$10 - $100' },\r\n *         { start: 100, end: 500, label: '$100 - $500' },\r\n *         { start: 500, label: '> $500' },\r\n *       ]}\r\n *     />\r\n *   </InstantSearch>\r\n * );\r\n */\n\nvar NumericMenuWidget = function NumericMenuWidget(props) {\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(NumericMenu, props));\n};\nexport default connectNumericMenu(NumericMenuWidget, {\n  $$widgetType: 'ais.numericMenu'\n});","map":{"version":3,"names":["React","connectNumericMenu","NumericMenu","PanelCallbackHandler","NumericMenuWidget","props","createElement","$$widgetType"],"sources":["C:/Users/tudor/propr/RepositoryNetlify/node_modules/react-instantsearch-dom/dist/es/widgets/NumericMenu.js"],"sourcesContent":["import React from 'react';\r\nimport { connectNumericMenu } from 'react-instantsearch-core';\r\nimport NumericMenu from \"../components/NumericMenu.js\";\r\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\r\n\r\n/**\r\n * NumericMenu is a widget used for selecting the range value of a numeric attribute.\r\n * @name NumericMenu\r\n * @kind widget\r\n * @requirements The attribute passed to the `attribute` prop must be holding numerical values.\r\n * @propType {string} attribute - the name of the attribute in the records\r\n * @propType {{label: string, start: number, end: number}[]} items - List of options. With a text label, and upper and lower bounds.\r\n * @propType {string} [defaultRefinement] - the value of the item selected by default, follow the format \"min:max\".\r\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\r\n * @themeKey ais-NumericMenu - the root div of the widget\r\n * @themeKey ais-NumericMenu--noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-NumericMenu-list - the list of all refinement items\r\n * @themeKey ais-NumericMenu-item - the refinement list item\r\n * @themeKey ais-NumericMenu-item--selected - the selected refinement list item\r\n * @themeKey ais-NumericMenu-label - the label of each refinement item\r\n * @themeKey ais-NumericMenu-radio - the radio input of each refinement item\r\n * @themeKey ais-NumericMenu-labelText - the label text of each refinement item\r\n * @translationkey all - The label of the largest range added automatically by react instantsearch\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, NumericMenu } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <NumericMenu\r\n *       attribute=\"price\"\r\n *       items={[\r\n *         { end: 10, label: '< $10' },\r\n *         { start: 10, end: 100, label: '$10 - $100' },\r\n *         { start: 100, end: 500, label: '$100 - $500' },\r\n *         { start: 500, label: '> $500' },\r\n *       ]}\r\n *     />\r\n *   </InstantSearch>\r\n * );\r\n */\r\n\r\nvar NumericMenuWidget = function NumericMenuWidget(props) {\r\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(NumericMenu, props));\r\n};\r\nexport default connectNumericMenu(NumericMenuWidget, {\r\n  $$widgetType: 'ais.numericMenu'\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,oBAAoB,MAAM,uCAAuC;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,iBAAiB,GAAG,SAASA,iBAAiBA,CAACC,KAAK,EAAE;EACxD,OAAO,aAAaL,KAAK,CAACM,aAAa,CAACH,oBAAoB,EAAEE,KAAK,EAAE,aAAaL,KAAK,CAACM,aAAa,CAACJ,WAAW,EAAEG,KAAK,CAAC,CAAC;AAC5H,CAAC;AACD,eAAeJ,kBAAkB,CAACG,iBAAiB,EAAE;EACnDG,YAAY,EAAE;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}