{"ast":null,"code":"import React from 'react';\nimport { connectCurrentRefinements } from 'react-instantsearch-core';\nimport CurrentRefinements from \"../components/CurrentRefinements.js\";\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\n\n/**\r\n * The CurrentRefinements widget displays the list of currently applied filters.\r\n *\r\n * It allows the user to selectively remove them.\r\n * @name CurrentRefinements\r\n * @kind widget\r\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\r\n * @themeKey ais-CurrentRefinements - the root div of the widget\r\n * @themeKey ais-CurrentRefinements--noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-CurrentRefinements-list - the list of all refined items\r\n * @themeKey ais-CurrentRefinements-list--noRefinement - the list of all refined items when there is no refinement\r\n * @themeKey ais-CurrentRefinements-item - the refined list item\r\n * @themeKey ais-CurrentRefinements-button - the button of each refined list item\r\n * @themeKey ais-CurrentRefinements-label - the refined list label\r\n * @themeKey ais-CurrentRefinements-category - the category of each item\r\n * @themeKey ais-CurrentRefinements-categoryLabel - the label of each catgory\r\n * @themeKey ais-CurrentRefinements-delete - the delete button of each label\r\n * @translationKey clearFilter - the remove filter button label\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, CurrentRefinements, RefinementList } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <CurrentRefinements />\r\n *     <RefinementList\r\n *       attribute=\"brand\"\r\n *       defaultRefinement={['Colors']}\r\n *     />\r\n *   </InstantSearch>\r\n * );\r\n */\n\nvar CurrentRefinementsWidget = function CurrentRefinementsWidget(props) {\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(CurrentRefinements, props));\n};\nexport default connectCurrentRefinements(CurrentRefinementsWidget, {\n  $$widgetType: 'ais.currentRefinements'\n});","map":{"version":3,"names":["React","connectCurrentRefinements","CurrentRefinements","PanelCallbackHandler","CurrentRefinementsWidget","props","createElement","$$widgetType"],"sources":["C:/Users/tudor/propr/RepositoryNetlify/node_modules/react-instantsearch-dom/dist/es/widgets/CurrentRefinements.js"],"sourcesContent":["import React from 'react';\r\nimport { connectCurrentRefinements } from 'react-instantsearch-core';\r\nimport CurrentRefinements from \"../components/CurrentRefinements.js\";\r\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\r\n\r\n/**\r\n * The CurrentRefinements widget displays the list of currently applied filters.\r\n *\r\n * It allows the user to selectively remove them.\r\n * @name CurrentRefinements\r\n * @kind widget\r\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\r\n * @themeKey ais-CurrentRefinements - the root div of the widget\r\n * @themeKey ais-CurrentRefinements--noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-CurrentRefinements-list - the list of all refined items\r\n * @themeKey ais-CurrentRefinements-list--noRefinement - the list of all refined items when there is no refinement\r\n * @themeKey ais-CurrentRefinements-item - the refined list item\r\n * @themeKey ais-CurrentRefinements-button - the button of each refined list item\r\n * @themeKey ais-CurrentRefinements-label - the refined list label\r\n * @themeKey ais-CurrentRefinements-category - the category of each item\r\n * @themeKey ais-CurrentRefinements-categoryLabel - the label of each catgory\r\n * @themeKey ais-CurrentRefinements-delete - the delete button of each label\r\n * @translationKey clearFilter - the remove filter button label\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, CurrentRefinements, RefinementList } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <CurrentRefinements />\r\n *     <RefinementList\r\n *       attribute=\"brand\"\r\n *       defaultRefinement={['Colors']}\r\n *     />\r\n *   </InstantSearch>\r\n * );\r\n */\r\n\r\nvar CurrentRefinementsWidget = function CurrentRefinementsWidget(props) {\r\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(CurrentRefinements, props));\r\n};\r\nexport default connectCurrentRefinements(CurrentRefinementsWidget, {\r\n  $$widgetType: 'ais.currentRefinements'\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,yBAAyB,QAAQ,0BAA0B;AACpE,OAAOC,kBAAkB,MAAM,qCAAqC;AACpE,OAAOC,oBAAoB,MAAM,uCAAuC;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,wBAAwB,GAAG,SAASA,wBAAwBA,CAACC,KAAK,EAAE;EACtE,OAAO,aAAaL,KAAK,CAACM,aAAa,CAACH,oBAAoB,EAAEE,KAAK,EAAE,aAAaL,KAAK,CAACM,aAAa,CAACJ,kBAAkB,EAAEG,KAAK,CAAC,CAAC;AACnI,CAAC;AACD,eAAeJ,yBAAyB,CAACG,wBAAwB,EAAE;EACjEG,YAAY,EAAE;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}