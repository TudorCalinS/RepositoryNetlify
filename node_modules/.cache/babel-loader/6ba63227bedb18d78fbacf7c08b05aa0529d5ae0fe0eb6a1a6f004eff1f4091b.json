{"ast":null,"code":"'use strict';\n\nvar find = require('./find');\n\n/**\r\n * Transform sort format from user friendly notation to lodash format\r\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\r\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\r\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\r\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function (sort) {\n    return sort.split(':');\n  });\n  return sortBy.reduce(function preparePredicate(out, sort) {\n    var sortInstruction = sort.split(':');\n    var matchingDefault = find(defaultInstructions, function (defaultInstruction) {\n      return defaultInstruction[0] === sortInstruction[0];\n    });\n    if (sortInstruction.length > 1 || !matchingDefault) {\n      out[0].push(sortInstruction[0]);\n      out[1].push(sortInstruction[1]);\n      return out;\n    }\n    out[0].push(matchingDefault[0]);\n    out[1].push(matchingDefault[1]);\n    return out;\n  }, [[], []]);\n};","map":{"version":3,"names":["find","require","module","exports","formatSort","sortBy","defaults","defaultInstructions","map","sort","split","reduce","preparePredicate","out","sortInstruction","matchingDefault","defaultInstruction","length","push"],"sources":["C:/Users/tudor/propr/RepositoryNetlify/node_modules/react-instantsearch-core/node_modules/algoliasearch-helper/src/functions/formatSort.js"],"sourcesContent":["'use strict';\r\n\r\nvar find = require('./find');\r\n\r\n/**\r\n * Transform sort format from user friendly notation to lodash format\r\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\r\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\r\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\r\n */\r\nmodule.exports = function formatSort(sortBy, defaults) {\r\n  var defaultInstructions = (defaults || []).map(function (sort) {\r\n    return sort.split(':');\r\n  });\r\n\r\n  return sortBy.reduce(\r\n    function preparePredicate(out, sort) {\r\n      var sortInstruction = sort.split(':');\r\n\r\n      var matchingDefault = find(\r\n        defaultInstructions,\r\n        function (defaultInstruction) {\r\n          return defaultInstruction[0] === sortInstruction[0];\r\n        }\r\n      );\r\n\r\n      if (sortInstruction.length > 1 || !matchingDefault) {\r\n        out[0].push(sortInstruction[0]);\r\n        out[1].push(sortInstruction[1]);\r\n        return out;\r\n      }\r\n\r\n      out[0].push(matchingDefault[0]);\r\n      out[1].push(matchingDefault[1]);\r\n      return out;\r\n    },\r\n    [[], []]\r\n  );\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,SAASC,UAAUA,CAACC,MAAM,EAAEC,QAAQ,EAAE;EACrD,IAAIC,mBAAmB,GAAG,CAACD,QAAQ,IAAI,EAAE,EAAEE,GAAG,CAAC,UAAUC,IAAI,EAAE;IAC7D,OAAOA,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EACxB,CAAC,CAAC;EAEF,OAAOL,MAAM,CAACM,MAAM,CAClB,SAASC,gBAAgBA,CAACC,GAAG,EAAEJ,IAAI,EAAE;IACnC,IAAIK,eAAe,GAAGL,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;IAErC,IAAIK,eAAe,GAAGf,IAAI,CACxBO,mBAAmB,EACnB,UAAUS,kBAAkB,EAAE;MAC5B,OAAOA,kBAAkB,CAAC,CAAC,CAAC,KAAKF,eAAe,CAAC,CAAC,CAAC;IACrD,CACF,CAAC;IAED,IAAIA,eAAe,CAACG,MAAM,GAAG,CAAC,IAAI,CAACF,eAAe,EAAE;MAClDF,GAAG,CAAC,CAAC,CAAC,CAACK,IAAI,CAACJ,eAAe,CAAC,CAAC,CAAC,CAAC;MAC/BD,GAAG,CAAC,CAAC,CAAC,CAACK,IAAI,CAACJ,eAAe,CAAC,CAAC,CAAC,CAAC;MAC/B,OAAOD,GAAG;IACZ;IAEAA,GAAG,CAAC,CAAC,CAAC,CAACK,IAAI,CAACH,eAAe,CAAC,CAAC,CAAC,CAAC;IAC/BF,GAAG,CAAC,CAAC,CAAC,CAACK,IAAI,CAACH,eAAe,CAAC,CAAC,CAAC,CAAC;IAC/B,OAAOF,GAAG;EACZ,CAAC,EACD,CAAC,EAAE,EAAE,EAAE,CACT,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}