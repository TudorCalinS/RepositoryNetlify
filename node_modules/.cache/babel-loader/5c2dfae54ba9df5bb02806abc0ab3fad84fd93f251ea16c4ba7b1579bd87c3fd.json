{"ast":null,"code":"import React from 'react';\nimport { connectRange } from 'react-instantsearch-core';\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\nimport RatingMenu from \"../components/RatingMenu.js\";\n\n/**\r\n * RatingMenu lets the user refine search results by clicking on stars.\r\n *\r\n * The stars are based on the selected `attribute`.\r\n * @requirements The attribute passed to the `attribute` prop must be holding numerical values.\r\n * @name RatingMenu\r\n * @kind widget\r\n * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”\r\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\r\n * The values inside the attribute must be JavaScript numbers (not strings).\r\n * @propType {string} attribute - the name of the attribute in the record\r\n * @propType {number} [min] - Minimum value for the rating. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.\r\n * @propType {number} [max] - Maximum value for the rating. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.\r\n * @propType {{min: number, max: number}} [defaultRefinement] - Default state of the widget containing the lower bound (end) and the max for the rating.\r\n * @themeKey ais-RatingMenu - the root div of the widget\r\n * @themeKey ais-RatingMenu--noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-RatingMenu-list - the list of ratings\r\n * @themeKey ais-RatingMenu-list--noRefinement - the list of ratings when there is no refinement\r\n * @themeKey ais-RatingMenu-item - the rating list item\r\n * @themeKey ais-RatingMenu-item--selected - the selected rating list item\r\n * @themeKey ais-RatingMenu-item--disabled - the disabled rating list item\r\n * @themeKey ais-RatingMenu-link - the rating clickable item\r\n * @themeKey ais-RatingMenu-starIcon - the star icon\r\n * @themeKey ais-RatingMenu-starIcon--full - the filled star icon\r\n * @themeKey ais-RatingMenu-starIcon--empty - the empty star icon\r\n * @themeKey ais-RatingMenu-label - the label used after the stars\r\n * @themeKey ais-RatingMenu-count - the count of ratings for a specific item\r\n * @translationKey ratingLabel - Label value for the rating link\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, RatingMenu } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <RatingMenu attribute=\"rating\" />\r\n *   </InstantSearch>\r\n * );\r\n */\n\nvar RatingMenuWidget = function RatingMenuWidget(props) {\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(RatingMenu, props));\n};\nexport default connectRange(RatingMenuWidget, {\n  $$widgetType: 'ais.ratingMenu'\n});","map":{"version":3,"names":["React","connectRange","PanelCallbackHandler","RatingMenu","RatingMenuWidget","props","createElement","$$widgetType"],"sources":["C:/Users/tudor/propr/RepositoryNetlify/node_modules/react-instantsearch-dom/dist/es/widgets/RatingMenu.js"],"sourcesContent":["import React from 'react';\r\nimport { connectRange } from 'react-instantsearch-core';\r\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\r\nimport RatingMenu from \"../components/RatingMenu.js\";\r\n\r\n/**\r\n * RatingMenu lets the user refine search results by clicking on stars.\r\n *\r\n * The stars are based on the selected `attribute`.\r\n * @requirements The attribute passed to the `attribute` prop must be holding numerical values.\r\n * @name RatingMenu\r\n * @kind widget\r\n * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”\r\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\r\n * The values inside the attribute must be JavaScript numbers (not strings).\r\n * @propType {string} attribute - the name of the attribute in the record\r\n * @propType {number} [min] - Minimum value for the rating. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.\r\n * @propType {number} [max] - Maximum value for the rating. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.\r\n * @propType {{min: number, max: number}} [defaultRefinement] - Default state of the widget containing the lower bound (end) and the max for the rating.\r\n * @themeKey ais-RatingMenu - the root div of the widget\r\n * @themeKey ais-RatingMenu--noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-RatingMenu-list - the list of ratings\r\n * @themeKey ais-RatingMenu-list--noRefinement - the list of ratings when there is no refinement\r\n * @themeKey ais-RatingMenu-item - the rating list item\r\n * @themeKey ais-RatingMenu-item--selected - the selected rating list item\r\n * @themeKey ais-RatingMenu-item--disabled - the disabled rating list item\r\n * @themeKey ais-RatingMenu-link - the rating clickable item\r\n * @themeKey ais-RatingMenu-starIcon - the star icon\r\n * @themeKey ais-RatingMenu-starIcon--full - the filled star icon\r\n * @themeKey ais-RatingMenu-starIcon--empty - the empty star icon\r\n * @themeKey ais-RatingMenu-label - the label used after the stars\r\n * @themeKey ais-RatingMenu-count - the count of ratings for a specific item\r\n * @translationKey ratingLabel - Label value for the rating link\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, RatingMenu } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <RatingMenu attribute=\"rating\" />\r\n *   </InstantSearch>\r\n * );\r\n */\r\n\r\nvar RatingMenuWidget = function RatingMenuWidget(props) {\r\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(RatingMenu, props));\r\n};\r\nexport default connectRange(RatingMenuWidget, {\r\n  $$widgetType: 'ais.ratingMenu'\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,0BAA0B;AACvD,OAAOC,oBAAoB,MAAM,uCAAuC;AACxE,OAAOC,UAAU,MAAM,6BAA6B;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,KAAK,EAAE;EACtD,OAAO,aAAaL,KAAK,CAACM,aAAa,CAACJ,oBAAoB,EAAEG,KAAK,EAAE,aAAaL,KAAK,CAACM,aAAa,CAACH,UAAU,EAAEE,KAAK,CAAC,CAAC;AAC3H,CAAC;AACD,eAAeJ,YAAY,CAACG,gBAAgB,EAAE;EAC5CG,YAAY,EAAE;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}