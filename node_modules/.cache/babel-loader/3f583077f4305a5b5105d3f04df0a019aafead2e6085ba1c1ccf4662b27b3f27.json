{"ast":null,"code":"import connectConfigure from \"../connectors/connectConfigure.js\";\n\n/**\r\n * Configure is a widget that lets you provide raw search parameters\r\n * to the Algolia API.\r\n *\r\n * Any of the props added to this widget will be forwarded to Algolia. For more information\r\n * on the different parameters that can be set, have a look at the\r\n * [reference](https://www.algolia.com/doc/api-client/javascript/search#search-parameters).\r\n *\r\n * This widget can be used either with react-dom and react-native. It will not render anything\r\n * on screen, only configure some parameters.\r\n *\r\n * Read more in the [Search parameters](guide/Search_parameters.html) guide.\r\n * @name Configure\r\n * @kind widget\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, Configure, Hits } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <Configure hitsPerPage={5} />\r\n *     <Hits />\r\n *   </InstantSearch>\r\n * );\r\n */\n\nexport default connectConfigure(function Configure() {\n  return null;\n}, {\n  $$widgetType: 'ais.configure'\n});","map":{"version":3,"names":["connectConfigure","Configure","$$widgetType"],"sources":["C:/Users/tudor/propr/RepositoryNetlify/node_modules/react-instantsearch-core/dist/es/widgets/Configure.js"],"sourcesContent":["import connectConfigure from \"../connectors/connectConfigure.js\";\r\n\r\n/**\r\n * Configure is a widget that lets you provide raw search parameters\r\n * to the Algolia API.\r\n *\r\n * Any of the props added to this widget will be forwarded to Algolia. For more information\r\n * on the different parameters that can be set, have a look at the\r\n * [reference](https://www.algolia.com/doc/api-client/javascript/search#search-parameters).\r\n *\r\n * This widget can be used either with react-dom and react-native. It will not render anything\r\n * on screen, only configure some parameters.\r\n *\r\n * Read more in the [Search parameters](guide/Search_parameters.html) guide.\r\n * @name Configure\r\n * @kind widget\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, Configure, Hits } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <Configure hitsPerPage={5} />\r\n *     <Hits />\r\n *   </InstantSearch>\r\n * );\r\n */\r\n\r\nexport default connectConfigure(function Configure() {\r\n  return null;\r\n}, {\r\n  $$widgetType: 'ais.configure'\r\n});"],"mappings":"AAAA,OAAOA,gBAAgB,MAAM,mCAAmC;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,gBAAgB,CAAC,SAASC,SAASA,CAAA,EAAG;EACnD,OAAO,IAAI;AACb,CAAC,EAAE;EACDC,YAAY,EAAE;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}