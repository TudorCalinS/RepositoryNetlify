{"ast":null,"code":"import React from 'react';\nimport { connectHierarchicalMenu } from 'react-instantsearch-core';\nimport HierarchicalMenu from \"../components/HierarchicalMenu.js\";\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\n\n/**\r\n * The hierarchical menu lets the user browse attributes using a tree-like structure.\r\n *\r\n * This is commonly used for multi-level categorization of products on e-commerce\r\n * websites. From a UX point of view, we suggest not displaying more than two levels deep.\r\n *\r\n * @name HierarchicalMenu\r\n * @kind widget\r\n * @requirements To use this widget, your attributes must be formatted in a specific way.\r\n * If you want for example to have a hierarchical menu of categories, objects in your index\r\n * should be formatted this way:\r\n *\r\n * ```json\r\n * [{\r\n *   \"objectID\": \"321432\",\r\n *   \"name\": \"lemon\",\r\n *   \"categories.lvl0\": \"products\",\r\n *   \"categories.lvl1\": \"products > fruits\",\r\n * },\r\n * {\r\n *   \"objectID\": \"8976987\",\r\n *   \"name\": \"orange\",\r\n *   \"categories.lvl0\": \"products\",\r\n *   \"categories.lvl1\": \"products > fruits\",\r\n * }]\r\n * ```\r\n *\r\n * It's also possible to provide more than one path for each level:\r\n *\r\n * ```json\r\n * {\r\n *   \"objectID\": \"321432\",\r\n *   \"name\": \"lemon\",\r\n *   \"categories.lvl0\": [\"products\", \"goods\"],\r\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\r\n * }\r\n * ```\r\n *\r\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\r\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\r\n *\r\n * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.\r\n * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limit and showMoreLimit.\r\n * @propType {number} [limit=10] -  The maximum number of items displayed.\r\n * @propType {number} [showMoreLimit=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.\r\n * @propType {string} [separator='>'] -  Specifies the level separator used in the data.\r\n * @propType {string} [rootPath=null] - The path to use if the first level is not the root level.\r\n * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.\r\n * @propType {string} [defaultRefinement] - the item value selected by default\r\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\r\n * @themeKey ais-HierarchicalMenu - the root div of the widget\r\n * @themeKey ais-HierarchicalMenu-noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-HierarchicalMenu-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.\r\n * @themeKey ais-HierarchicalMenu-list - the list of menu items\r\n * @themeKey ais-HierarchicalMenu-list--child - the child list of menu items\r\n * @themeKey ais-HierarchicalMenu-item - the menu list item\r\n * @themeKey ais-HierarchicalMenu-item--selected - the selected menu list item\r\n * @themeKey ais-HierarchicalMenu-item--parent - the menu list item containing children\r\n * @themeKey ais-HierarchicalMenu-link - the clickable menu element\r\n * @themeKey ais-HierarchicalMenu-link--selected - the clickable element of a selected menu list item\r\n * @themeKey ais-HierarchicalMenu-label - the label of each item\r\n * @themeKey ais-HierarchicalMenu-count - the count of values for each item\r\n * @themeKey ais-HierarchicalMenu-showMore - the button used to display more categories\r\n * @themeKey ais-HierarchicalMenu-showMore--disabled - the disabled button used to display more categories\r\n * @translationKey showMore - The label of the show more button. Accepts one parameter, a boolean that is true if the values are expanded\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, HierarchicalMenu } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <HierarchicalMenu\r\n *       attributes={[\r\n *         'hierarchicalCategories.lvl0',\r\n *         'hierarchicalCategories.lvl1',\r\n *         'hierarchicalCategories.lvl2',\r\n *       ]}\r\n *     />\r\n *   </InstantSearch>\r\n * );\r\n */\n\nvar HierarchicalMenuWidget = function HierarchicalMenuWidget(props) {\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(HierarchicalMenu, props));\n};\nexport default connectHierarchicalMenu(HierarchicalMenuWidget, {\n  $$widgetType: 'ais.hierarchicalMenu'\n});","map":{"version":3,"names":["React","connectHierarchicalMenu","HierarchicalMenu","PanelCallbackHandler","HierarchicalMenuWidget","props","createElement","$$widgetType"],"sources":["C:/Users/tudor/propr/RepositoryNetlify/node_modules/react-instantsearch-dom/dist/es/widgets/HierarchicalMenu.js"],"sourcesContent":["import React from 'react';\r\nimport { connectHierarchicalMenu } from 'react-instantsearch-core';\r\nimport HierarchicalMenu from \"../components/HierarchicalMenu.js\";\r\nimport PanelCallbackHandler from \"../components/PanelCallbackHandler.js\";\r\n\r\n/**\r\n * The hierarchical menu lets the user browse attributes using a tree-like structure.\r\n *\r\n * This is commonly used for multi-level categorization of products on e-commerce\r\n * websites. From a UX point of view, we suggest not displaying more than two levels deep.\r\n *\r\n * @name HierarchicalMenu\r\n * @kind widget\r\n * @requirements To use this widget, your attributes must be formatted in a specific way.\r\n * If you want for example to have a hierarchical menu of categories, objects in your index\r\n * should be formatted this way:\r\n *\r\n * ```json\r\n * [{\r\n *   \"objectID\": \"321432\",\r\n *   \"name\": \"lemon\",\r\n *   \"categories.lvl0\": \"products\",\r\n *   \"categories.lvl1\": \"products > fruits\",\r\n * },\r\n * {\r\n *   \"objectID\": \"8976987\",\r\n *   \"name\": \"orange\",\r\n *   \"categories.lvl0\": \"products\",\r\n *   \"categories.lvl1\": \"products > fruits\",\r\n * }]\r\n * ```\r\n *\r\n * It's also possible to provide more than one path for each level:\r\n *\r\n * ```json\r\n * {\r\n *   \"objectID\": \"321432\",\r\n *   \"name\": \"lemon\",\r\n *   \"categories.lvl0\": [\"products\", \"goods\"],\r\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\r\n * }\r\n * ```\r\n *\r\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\r\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\r\n *\r\n * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.\r\n * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limit and showMoreLimit.\r\n * @propType {number} [limit=10] -  The maximum number of items displayed.\r\n * @propType {number} [showMoreLimit=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.\r\n * @propType {string} [separator='>'] -  Specifies the level separator used in the data.\r\n * @propType {string} [rootPath=null] - The path to use if the first level is not the root level.\r\n * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.\r\n * @propType {string} [defaultRefinement] - the item value selected by default\r\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\r\n * @themeKey ais-HierarchicalMenu - the root div of the widget\r\n * @themeKey ais-HierarchicalMenu-noRefinement - the root div of the widget when there is no refinement\r\n * @themeKey ais-HierarchicalMenu-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.\r\n * @themeKey ais-HierarchicalMenu-list - the list of menu items\r\n * @themeKey ais-HierarchicalMenu-list--child - the child list of menu items\r\n * @themeKey ais-HierarchicalMenu-item - the menu list item\r\n * @themeKey ais-HierarchicalMenu-item--selected - the selected menu list item\r\n * @themeKey ais-HierarchicalMenu-item--parent - the menu list item containing children\r\n * @themeKey ais-HierarchicalMenu-link - the clickable menu element\r\n * @themeKey ais-HierarchicalMenu-link--selected - the clickable element of a selected menu list item\r\n * @themeKey ais-HierarchicalMenu-label - the label of each item\r\n * @themeKey ais-HierarchicalMenu-count - the count of values for each item\r\n * @themeKey ais-HierarchicalMenu-showMore - the button used to display more categories\r\n * @themeKey ais-HierarchicalMenu-showMore--disabled - the disabled button used to display more categories\r\n * @translationKey showMore - The label of the show more button. Accepts one parameter, a boolean that is true if the values are expanded\r\n * @example\r\n * import React from 'react';\r\n * import algoliasearch from 'algoliasearch/lite';\r\n * import { InstantSearch, HierarchicalMenu } from 'react-instantsearch-dom';\r\n *\r\n * const searchClient = algoliasearch(\r\n *   'latency',\r\n *   '6be0576ff61c053d5f9a3225e2a90f76'\r\n * );\r\n *\r\n * const App = () => (\r\n *   <InstantSearch\r\n *     searchClient={searchClient}\r\n *     indexName=\"instant_search\"\r\n *   >\r\n *     <HierarchicalMenu\r\n *       attributes={[\r\n *         'hierarchicalCategories.lvl0',\r\n *         'hierarchicalCategories.lvl1',\r\n *         'hierarchicalCategories.lvl2',\r\n *       ]}\r\n *     />\r\n *   </InstantSearch>\r\n * );\r\n */\r\n\r\nvar HierarchicalMenuWidget = function HierarchicalMenuWidget(props) {\r\n  return /*#__PURE__*/React.createElement(PanelCallbackHandler, props, /*#__PURE__*/React.createElement(HierarchicalMenu, props));\r\n};\r\nexport default connectHierarchicalMenu(HierarchicalMenuWidget, {\r\n  $$widgetType: 'ais.hierarchicalMenu'\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,uBAAuB,QAAQ,0BAA0B;AAClE,OAAOC,gBAAgB,MAAM,mCAAmC;AAChE,OAAOC,oBAAoB,MAAM,uCAAuC;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,sBAAsB,GAAG,SAASA,sBAAsBA,CAACC,KAAK,EAAE;EAClE,OAAO,aAAaL,KAAK,CAACM,aAAa,CAACH,oBAAoB,EAAEE,KAAK,EAAE,aAAaL,KAAK,CAACM,aAAa,CAACJ,gBAAgB,EAAEG,KAAK,CAAC,CAAC;AACjI,CAAC;AACD,eAAeJ,uBAAuB,CAACG,sBAAsB,EAAE;EAC7DG,YAAY,EAAE;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}